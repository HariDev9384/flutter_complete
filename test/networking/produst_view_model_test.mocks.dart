// Mocks generated by Mockito 5.4.2 from annotations
// in complete/test/networking/produst_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;
import 'dart:ui' as _i4;

import 'package:complete/utils/utils.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNetworkService_1 extends _i1.SmartFake
    implements _i2.NetworkService {
  _FakeNetworkService_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductRepository_2 extends _i1.SmartFake
    implements _i2.ProductRepository {
  _FakeProductRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiResponse_3<T> extends _i1.SmartFake
    implements _i2.ApiResponse<T> {
  _FakeApiResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ProductRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductRepository extends _i1.Mock implements _i2.ProductRepository {
  MockProductRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get client => (super.noSuchMethod(
        Invocation.getter(#client),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#client),
        ),
      ) as _i2.Dio);
  @override
  _i2.NetworkService get network => (super.noSuchMethod(
        Invocation.getter(#network),
        returnValue: _FakeNetworkService_1(
          this,
          Invocation.getter(#network),
        ),
      ) as _i2.NetworkService);
  @override
  set network(_i2.NetworkService? _network) => super.noSuchMethod(
        Invocation.setter(
          #network,
          _network,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.Future<dynamic> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: _i3.Future<dynamic>.value(),
      ) as _i3.Future<dynamic>);
}

/// A class which mocks [ProductsViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockProductsViewModel extends _i1.Mock implements _i2.ProductsViewModel {
  MockProductsViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ProductRepository get repo => (super.noSuchMethod(
        Invocation.getter(#repo),
        returnValue: _FakeProductRepository_2(
          this,
          Invocation.getter(#repo),
        ),
      ) as _i2.ProductRepository);
  @override
  set repo(_i2.ProductRepository? _repo) => super.noSuchMethod(
        Invocation.setter(
          #repo,
          _repo,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.ApiResponse<_i2.Product> get product => (super.noSuchMethod(
        Invocation.getter(#product),
        returnValue: _FakeApiResponse_3<_i2.Product>(
          this,
          Invocation.getter(#product),
        ),
      ) as _i2.ApiResponse<_i2.Product>);
  @override
  set product(_i2.ApiResponse<_i2.Product>? _product) => super.noSuchMethod(
        Invocation.setter(
          #product,
          _product,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  dynamic setProductList(_i2.ApiResponse<_i2.Product>? response) =>
      super.noSuchMethod(Invocation.method(
        #setProductList,
        [response],
      ));
  @override
  _i3.Future<void> fetchProductListApi() => (super.noSuchMethod(
        Invocation.method(
          #fetchProductListApi,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void addListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i4.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
